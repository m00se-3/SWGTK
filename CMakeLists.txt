cmake_minimum_required (VERSION 3.25)

project ("SWGTK")

include("CPM.cmake")

# Add CCache and CLang-Tidy, if available

find_program(CCACHE_PROGRAM ccache)

if(CCACHE_PROGRAM)

  message("-- Enabling ccache.\n")

  CPMAddPackage(
    NAME Ccache.cmake
    GITHUB_REPOSITORY TheLartians/Ccache.cmake
    VERSION 1.2
  )

  set(CMAKE_CXX_COMPILER_LAUNCHER ${CCACHE_PROGRAM})
endif()

find_program(CLANG_TIDY_LOC clang-tidy)

if(CLANG_TIDY_LOC)
  
  message("-- Enabling clang-tidy.\n")
  set(CMAKE_CXX_CLANG_TIDY ${CLANG_TIDY_LOC})
endif()

# Compiler warning flags go here.
if(NOT CMAKE_CXX_COMPILER_ID  MATCHES MSVC)
  list(APPEND WarningFlags "-Wall" "-Wextra" "-Wpedantic" "-Wno-newline-eof" "-Wno-c++98-compat" "-Wno-c++98-compat-pedantic" "-Wconversion" "-Wshadow" "-Wnon-virtual-dtor")
else()
  list(APPEND WarningFlags "/Wall", "/permissive-")
endif()

# If building for emscripten
if(EMSCRIPTEN)
  message("-- Emscripten build enabled!!!")

  set(CMAKE_EXECUTABLE_SUFFIX ".html")

endif()

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/SWGTK)

# Lua and sol2
CPMAddPackage(
  NAME lua
  GITHUB_REPOSITORY lua/lua
  VERSION 5.4.6
  DOWNLOAD_ONLY Yes
)

if(lua_ADDED)

  FILE(GLOB lua_sources ${lua_SOURCE_DIR}/*.c)
  list(REMOVE_ITEM lua_sources ${lua_SOURCE_DIR}/lua.c ${lua_SOURCE_DIR}/luac.c)

  add_library(lua STATIC ${lua_sources})

  target_include_directories(
    lua
    PRIVATE
    ${lua_SOURCE_DIR}
  )

endif()

CPMAddPackage("gh:m00se-3/sol2#fix-clang_18")

# SDL and external dependencies
CPMAddPackage(
  NAME WavPack
  GITHUB_REPOSITORY "libsdl-org/WavPack"
  GIT_TAG "5.7.0"
  OPTIONS "BUILD_SHARED_LIBS true"
)

CPMAddPackage("gh:libsdl-org/freetype#VER-2-13-2")

# Add a custom target alias for Freetype, since it uses a legacy version of cmake
if (freetype_ADDED)
  add_library(Freetype::Freetype ALIAS freetype)
endif()

CPMAddPackage("gh:libsdl-org/SDL#release-2.30.4")
CPMAddPackage("gh:libsdl-org/SDL_image#release-2.8.2")
CPMAddPackage("gh:libsdl-org/SDL_ttf#release-2.22.0")

# If any of these external dependencies become necessary in the future, they should be added before any SDL.(For consistency)
CPMAddPackage(
    NAME "SDL_mixer"
    GITHUB_REPOSITORY "libsdl-org/SDL_mixer"
    GIT_TAG "release-2.8.0"
    OPTIONS 
    "SDL2MIXER_OPUS false"
    "SDL2MIXER_MOD false"
    "SDL2MIXER_MIDI_FLUIDSYNTH false"
)

target_compile_definitions(SDL2_mixer PUBLIC HAVE_WAVPACK_H=1) # Make sure SDL_mixer uses the correct include path for wavpack
target_include_directories(SDL2_mixer PUBLIC ${WavPack_SOURCE_DIR})

#  Test_Suite specific
CPMAddPackage("gh:Immediate-Mode-UI/Nuklear#4.12.0")

# Misc
CPMAddPackage("gh:gsl-lite/gsl-lite@0.41.0")

# Include sub-projects.
add_subdirectory ("SWGTK")
