add_executable(Test_Suite)
add_library(SWGTK)

list(
	APPEND Engine_Headers
	${CMAKE_CURRENT_LIST_DIR}/engine/include/ErrCodes.hpp
	${CMAKE_CURRENT_LIST_DIR}/engine/include/SDLApp.hpp
	${CMAKE_CURRENT_LIST_DIR}/engine/include/Texture.hpp
	${CMAKE_CURRENT_LIST_DIR}/engine/include/Input.hpp
	${CMAKE_CURRENT_LIST_DIR}/engine/include/Scene.hpp
	${CMAKE_CURRENT_LIST_DIR}/engine/include/Component.hpp
	${CMAKE_CURRENT_LIST_DIR}/engine/include/RenderWrap.hpp
	${CMAKE_CURRENT_LIST_DIR}/engine/include/TTFFont.hpp
)

list(
	APPEND Engine_Sources
	${CMAKE_CURRENT_LIST_DIR}/engine/src/SDLApp.cpp
	${CMAKE_CURRENT_LIST_DIR}/engine/src/Texture.cpp
	${CMAKE_CURRENT_LIST_DIR}/engine/src/Input.cpp
	${CMAKE_CURRENT_LIST_DIR}/engine/src/Component.cpp
	${CMAKE_CURRENT_LIST_DIR}/engine/src/RenderWrap.cpp
	${CMAKE_CURRENT_LIST_DIR}/engine/src/Scene.cpp
	${CMAKE_CURRENT_LIST_DIR}/engine/src/TTFFont.cpp
)

# If we are building for emscripten.
if(EMSCRIPTEN)

target_include_directories(
	SWGTK

	PUBLIC 

	${CMAKE_CURRENT_LIST_DIR}/engine/include
	${LUA_INCLUDE_DIR}
	${CMAKE_CURRENT_LIST_DIR}/external
)

target_link_libraries(
	SWGTK	

	PRIVATE 

	# Thank goodness these linking expressions were generated by vcpkg. :$
	$<TARGET_NAME_IF_EXISTS:SDL2::SDL2main>
	$<IF:$<TARGET_EXISTS:SDL2::SDL2>,SDL2::SDL2,SDL2::SDL2-static>
	$<IF:$<TARGET_EXISTS:SDL2_image::SDL2_image>,SDL2_image::SDL2_image,SDL2_image::SDL2_image-static>
	$<IF:$<TARGET_EXISTS:SDL2_mixer::SDL2_mixer>,SDL2_mixer::SDL2_mixer,SDL2_mixer::SDL2_mixer-static>
	$<IF:$<TARGET_EXISTS:SDL2_ttf::SDL2_ttf>,SDL2_ttf::SDL2_ttf,SDL2_ttf::SDL2_ttf-static>
	gsl::gsl-lite gsl::gsl-lite-v0 gsl::gsl-lite-v1
	${LUA_LIBRARIES}
	fmt::fmt
)

target_include_directories(
	Test_Suite	

	PUBLIC 

	${CMAKE_CURRENT_LIST_DIR}/engine/include
	${CMAKE_CURRENT_LIST_DIR}/tests/include
	${LUA_INCLUDE_DIR}
	${CMAKE_CURRENT_LIST_DIR}/external
)

target_link_libraries(
	Test_Suite	

	PRIVATE 

	# Thank goodness these linking expressions were generated by vcpkg. :$
	$<TARGET_NAME_IF_EXISTS:SDL2::SDL2main>
	$<IF:$<TARGET_EXISTS:SDL2::SDL2>,SDL2::SDL2,SDL2::SDL2-static>
	$<IF:$<TARGET_EXISTS:SDL2_image::SDL2_image>,SDL2_image::SDL2_image,SDL2_image::SDL2_image-static>
	$<IF:$<TARGET_EXISTS:SDL2_mixer::SDL2_mixer>,SDL2_mixer::SDL2_mixer,SDL2_mixer::SDL2_mixer-static>
	$<IF:$<TARGET_EXISTS:SDL2_ttf::SDL2_ttf>,SDL2_ttf::SDL2_ttf,SDL2_ttf::SDL2_ttf-static>
	gsl::gsl-lite gsl::gsl-lite-v0 gsl::gsl-lite-v1
	${LUA_LIBRARIES}
	SWGTK

)


else()

target_compile_definitions(
	SWGTK

	PRIVATE 

	SWGTK_ASSETS="$ENV{Assets_Dir}"
	SWGTK_CONFIG="$ENV{Config_Dir}"
)

target_include_directories(
	Test_Suite

	PUBLIC 

	${CMAKE_CURRENT_LIST_DIR}/engine/include
	${CMAKE_CURRENT_LIST_DIR}/tests/include
	${LUA_INCLUDE_DIR}
)

target_link_libraries(
	Test_Suite

	PRIVATE 

	# Thank goodness these linking expressions were generated by vcpkg. :$
	$<TARGET_NAME_IF_EXISTS:SDL2::SDL2main>
	$<IF:$<TARGET_EXISTS:SDL2::SDL2>,SDL2::SDL2,SDL2::SDL2-static>
	$<IF:$<TARGET_EXISTS:SDL2_image::SDL2_image>,SDL2_image::SDL2_image,SDL2_image::SDL2_image-static>
	$<IF:$<TARGET_EXISTS:SDL2_mixer::SDL2_mixer>,SDL2_mixer::SDL2_mixer,SDL2_mixer::SDL2_mixer-static>
	$<IF:$<TARGET_EXISTS:SDL2_ttf::SDL2_ttf>,SDL2_ttf::SDL2_ttf,SDL2_ttf::SDL2_ttf-static>
	gsl::gsl-lite gsl::gsl-lite-v0 gsl::gsl-lite-v1
	${LUA_LIBRARIES}
	sol2
	nuklear
	SWGTK
)

target_include_directories(
	SWGTK

	PUBLIC 

	${CMAKE_CURRENT_LIST_DIR}/engine/include
	${LUA_INCLUDE_DIR}
)

target_link_libraries(
	SWGTK	

	PRIVATE 

	# Thank goodness these linking expressions were generated by vcpkg. :$
	$<TARGET_NAME_IF_EXISTS:SDL2::SDL2main>
	$<IF:$<TARGET_EXISTS:SDL2::SDL2>,SDL2::SDL2,SDL2::SDL2-static>
	$<IF:$<TARGET_EXISTS:SDL2_image::SDL2_image>,SDL2_image::SDL2_image,SDL2_image::SDL2_image-static>
	$<IF:$<TARGET_EXISTS:SDL2_mixer::SDL2_mixer>,SDL2_mixer::SDL2_mixer,SDL2_mixer::SDL2_mixer-static>
	$<IF:$<TARGET_EXISTS:SDL2_ttf::SDL2_ttf>,SDL2_ttf::SDL2_ttf,SDL2_ttf::SDL2_ttf-static>
	gsl::gsl-lite gsl::gsl-lite-v0 gsl::gsl-lite-v1
	${LUA_LIBRARIES}
	sol2
	fmt::fmt	
)
endif(EMSCRIPTEN)

if(${CMAKE_BUILD_TYPE} MATCHES "Debug")
	target_compile_options(Test_Suite PRIVATE "-g")
endif()

target_sources(
	SWGTK	

	PUBLIC 

	${Engine_Headers}
	
	PRIVATE 

	${Engine_Sources}
)

target_sources(
	Test_Suite

	PUBLIC 

	${Engine_Headers}
	
	${CMAKE_CURRENT_LIST_DIR}/tests/include/NKFont.hpp
	${CMAKE_CURRENT_LIST_DIR}/tests/include/UI.hpp

	PRIVATE 

	${CMAKE_CURRENT_LIST_DIR}/tests/src/main.cpp
	${CMAKE_CURRENT_LIST_DIR}/tests/src/nuklear.cpp
	${CMAKE_CURRENT_LIST_DIR}/tests/src/NKFont.cpp
	${CMAKE_CURRENT_LIST_DIR}/tests/src/UI.cpp
)
