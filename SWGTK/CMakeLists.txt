add_executable (SWGTK)

# If we are building for emscripten.
if(EMSCRIPTEN)

target_include_directories(
	SWGTK

	PUBLIC 

	${CMAKE_CURRENT_LIST_DIR}/include 
	${LUA_INCLUDE_DIR}
	${CMAKE_CURRENT_LIST_DIR}/external
)

target_link_libraries(
	SWGTK

	PRIVATE 

	# Thank goodness these linking expressions were generated by vcpkg. :$
	$<TARGET_NAME_IF_EXISTS:SDL2::SDL2main>
	$<IF:$<TARGET_EXISTS:SDL2::SDL2>,SDL2::SDL2,SDL2::SDL2-static>
	$<IF:$<TARGET_EXISTS:SDL2_image::SDL2_image>,SDL2_image::SDL2_image,SDL2_image::SDL2_image-static>
	$<IF:$<TARGET_EXISTS:SDL2_mixer::SDL2_mixer>,SDL2_mixer::SDL2_mixer,SDL2_mixer::SDL2_mixer-static>
	$<IF:$<TARGET_EXISTS:SDL2_ttf::SDL2_ttf>,SDL2_ttf::SDL2_ttf,SDL2_ttf::SDL2_ttf-static>
	gsl::gsl-lite gsl::gsl-lite-v0 gsl::gsl-lite-v1
	${LUA_LIBRARIES}

)

else()

target_compile_definitions(
	SWGTK

	PRIVATE 

	SWGTK_ASSETS="$ENV{Assets_Dir}"
	SWGTK_CONFIG="$ENV{Config_Dir}"
)

target_include_directories(
	SWGTK

	PUBLIC 

	${CMAKE_CURRENT_LIST_DIR}/include 
	${LUA_INCLUDE_DIR}
)

target_link_libraries(
	SWGTK

	PRIVATE 

	# Thank goodness these linking expressions were generated by vcpkg. :$
	$<TARGET_NAME_IF_EXISTS:SDL2::SDL2main>
	$<IF:$<TARGET_EXISTS:SDL2::SDL2>,SDL2::SDL2,SDL2::SDL2-static>
	$<IF:$<TARGET_EXISTS:SDL2_image::SDL2_image>,SDL2_image::SDL2_image,SDL2_image::SDL2_image-static>
	$<IF:$<TARGET_EXISTS:SDL2_mixer::SDL2_mixer>,SDL2_mixer::SDL2_mixer,SDL2_mixer::SDL2_mixer-static>
	$<IF:$<TARGET_EXISTS:SDL2_ttf::SDL2_ttf>,SDL2_ttf::SDL2_ttf,SDL2_ttf::SDL2_ttf-static>
	gsl::gsl-lite gsl::gsl-lite-v0 gsl::gsl-lite-v1
	${LUA_LIBRARIES}
	sol2
	nuklear
)

endif(EMSCRIPTEN)

if(${CMAKE_BUILD_TYPE} MATCHES "Debug")
	target_compile_options(SWGTK PRIVATE "-g")
endif()

target_sources(
	SWGTK

	PUBLIC 

	${CMAKE_CURRENT_LIST_DIR}/include/ErrCodes.hpp

	${CMAKE_CURRENT_LIST_DIR}/include/SDLApp.hpp
	${CMAKE_CURRENT_LIST_DIR}/include/Texture.hpp
	${CMAKE_CURRENT_LIST_DIR}/include/Font.hpp
	${CMAKE_CURRENT_LIST_DIR}/include/Input.hpp
	${CMAKE_CURRENT_LIST_DIR}/include/Component.hpp

	${CMAKE_CURRENT_LIST_DIR}/include/Scene.hpp

	${CMAKE_CURRENT_LIST_DIR}/include/UI.hpp

	PRIVATE 

	${CMAKE_CURRENT_LIST_DIR}/src/main.cpp
	${CMAKE_CURRENT_LIST_DIR}/src/SDLApp.cpp
	${CMAKE_CURRENT_LIST_DIR}/src/Texture.cpp
	${CMAKE_CURRENT_LIST_DIR}/src/Font.cpp
	${CMAKE_CURRENT_LIST_DIR}/src/Input.cpp
	${CMAKE_CURRENT_LIST_DIR}/src/Component.cpp
	${CMAKE_CURRENT_LIST_DIR}/src/nuklear.cpp

	${CMAKE_CURRENT_LIST_DIR}/src/Scene.cpp

	${CMAKE_CURRENT_LIST_DIR}/src/UI.cpp
)
